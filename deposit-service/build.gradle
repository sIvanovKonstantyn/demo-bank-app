plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
}

version = '1.0.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
ext {
    set('springCloudVersion', "2020.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    annotationProcessor 'org.projectlombok:lombok'

    /*
    * main scope
    * */
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.1'

    compileOnly 'org.projectlombok:lombok'

    /*
    * test scope
    * */
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.6.5'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-core:2.12.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'

    testImplementation 'org.awaitility:awaitility:3.0.0'
    testImplementation 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false//file("${buildDir}/jacocoHtml")
    }
    dependsOn test // tests are required to run before generating the report
}